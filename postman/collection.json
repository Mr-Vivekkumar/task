{
  "info": {
    "name": "Product Management API",
    "description": "Complete API collection for the Product Management System with comprehensive documentation and examples. This collection covers all endpoints for user management, authentication, product operations, category management, bulk uploads, and reporting features.\n\n## Getting Started\n1. **Authentication**: Start by calling the Login endpoint to obtain your JWT token\n2. **Token Management**: The token is automatically stored in the `authToken` variable for use in other requests\n3. **Base URL**: The collection uses the production URL by default. Change the `baseUrl` variable for different environments\n\n## Key Features\n- **User Management**: Complete CRUD operations for user accounts\n- **Product Management**: Advanced filtering, sorting, and search capabilities\n- **Category Management**: Organize products with hierarchical categories\n- **Bulk Operations**: Import/export products via CSV and XLSX files\n- **Real-time Status**: Track asynchronous operations with status endpoints\n- **Comprehensive Reports**: Export data in multiple formats\n\n## Authentication\nAll endpoints (except System and Authentication) require a Bearer token in the Authorization header. The Login endpoint automatically stores the token for subsequent requests.\n\n## Rate Limiting\nAPI requests are rate-limited. Check response headers for current limits and reset times.\n\n## Error Handling\nAll endpoints return consistent error responses with appropriate HTTP status codes and descriptive error messages.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://product-management-api.vercel.app",
      "type": "string",
      "description": "Production backend URL for the Product Management API"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string",
      "description": "JWT authentication token obtained from login endpoint"
    }
  ],
  "item": [
    {
      "name": "System",
      "description": "System health and documentation endpoints for monitoring and API exploration",
      "item": [
        {
          "name": "Health",
          "request": {
            "description": "Check the health status of the API server. Returns server status, uptime, and basic system information.",
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "Swagger UI",
          "request": {
            "description": "Access the interactive Swagger documentation interface for the API. This provides a web-based interface to explore and test all available endpoints.",
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api-docs/",
              "host": ["{{baseUrl}}"],
              "path": ["api-docs", ""]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "description": "User authentication endpoints for registration and login. All other endpoints require a valid JWT token obtained from the login endpoint.",
      "item": [
        {
          "name": "Register",
          "request": {
            "description": "Register a new user account. Requires email and password. Password must be at least 8 characters with uppercase, lowercase, number, and special character.",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"Admin#123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('authToken', response.data.token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "description": "Authenticate user and obtain JWT token. The token is automatically stored in the authToken variable for use in other requests. Token expires in 24 hours.",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"Admin#123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "description": "User management endpoints for CRUD operations. All endpoints require authentication via Bearer token.",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "description": "Retrieve a paginated list of all users in the system. Supports pagination with limit and offset parameters.",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "description": "Create a new user account. Requires email and password. Password must meet security requirements.",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"NewUser#123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id-here"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id-here"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "user-id-here"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Categories",
      "description": "Category management endpoints for organizing products. Categories are used to group and filter products in the system.",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "description": "Retrieve all available product categories. Returns category ID, name, and product count.",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            }
          },
          "response": []
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Electronics\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            }
          },
          "response": []
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/categories/:id",
              "host": ["{{baseUrl}}"],
              "path": ["categories", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "category-id-here"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Electronics\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories/:id",
              "host": ["{{baseUrl}}"],
              "path": ["categories", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "category-id-here"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/categories/:id",
              "host": ["{{baseUrl}}"],
              "path": ["categories", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "category-id-here"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Products",
      "description": "Product management endpoints with advanced filtering, sorting, and search capabilities. Supports pagination and bulk operations.",
      "item": [
        {
          "name": "Get Products (with pagination)",
          "request": {
            "description": "Retrieve products with pagination, sorting, and search. Query parameters: limit (items per page), sort (field to sort by, prefix with - for descending), q (search query).",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products?limit=20&sort=price&q=phone",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "sort",
                  "value": "price"
                },
                {
                  "key": "q",
                  "value": "phone"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Products (descending price)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products?limit=20&sort=-price",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "sort",
                  "value": "-price"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Products (by category)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products?categoryName=Electronics",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "categoryName",
                  "value": "Electronics"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"iPhone 15\",\n  \"price\": 999.99,\n  \"image\": \"https://example.com/iphone15.jpg\",\n  \"categoryId\": \"category-id-here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            }
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products/:id",
              "host": ["{{baseUrl}}"],
              "path": ["products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "product-id-here"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"iPhone 15 Pro\",\n  \"price\": 1099.99\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/:id",
              "host": ["{{baseUrl}}"],
              "path": ["products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "product-id-here"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products/:id",
              "host": ["{{baseUrl}}"],
              "path": ["products", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "product-id-here"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Bulk Upload",
      "description": "Bulk upload endpoints for importing multiple products via CSV or XLSX files. Supports asynchronous processing with status tracking.",
      "item": [
        {
          "name": "Upload CSV File",
          "request": {
            "description": "Upload a CSV file containing product data for bulk import. File should have columns: name, price, image, categoryId. Returns operation ID for status tracking.",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "path/to/products.csv"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/products/bulk-upload",
              "host": ["{{baseUrl}}"],
              "path": ["products", "bulk-upload"]
            }
          },
          "response": []
        },
        {
          "name": "Upload XLSX File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "path/to/products.xlsx"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/products/bulk-upload",
              "host": ["{{baseUrl}}"],
              "path": ["products", "bulk-upload"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Operations",
      "description": "Operation status tracking for asynchronous operations like bulk uploads. Use operation ID to check processing status.",
      "item": [
        {
          "name": "Get Operation Status",
          "request": {
            "description": "Check the status of an asynchronous operation (e.g., bulk upload). Returns operation status, progress, and any error messages.",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/operations/:id",
              "host": ["{{baseUrl}}"],
              "path": ["operations", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "operation-id-here"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reports",
      "description": "Report generation endpoints for exporting product data in various formats (CSV, XLSX). Useful for data analysis and backup purposes.",
      "item": [
        {
          "name": "Download CSV Report",
          "request": {
            "description": "Download all products as a CSV file. Includes product details, categories, and timestamps. Useful for data export and analysis.",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reports/products.csv",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "products.csv"]
            }
          },
          "response": []
        },
        {
          "name": "Download XLSX Report",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/reports/products.xlsx",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "products.xlsx"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
